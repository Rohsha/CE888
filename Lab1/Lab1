{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled0.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyMCRa8IO46SoYXM+noeF37p",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Rohsha/datasciencecoursera/blob/master/Untitled0.ipynb\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "20RYoq9hUpds",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 136
        },
        "outputId": "4348e240-3c8d-480d-aad4-535fc0972077"
      },
      "source": [
        "import numpy as np\n",
        "a=np.array([[2,3],[5,6],[7,8],[9,10]])\n",
        "print(a) \n",
        "print(a.ndim)\n",
        "print(a.shape)\n",
        "print(a.size)"
      ],
      "execution_count": 1,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[ 2  3]\n",
            " [ 5  6]\n",
            " [ 7  8]\n",
            " [ 9 10]]\n",
            "2\n",
            "(4, 2)\n",
            "8\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NZ5YcVXDUvm2",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 51
        },
        "outputId": "c4520cf2-be5a-4b28-92e2-3b848fe8cfa7"
      },
      "source": [
        "a=np.array([[5,6,3,7,9,2,4,5,5,2]])\n",
        "c=(np.sort(a))\n",
        "print(c)\n",
        "b=c[:,::-1]\n",
        "print(b)"
      ],
      "execution_count": 2,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[2 2 3 4 5 5 5 6 7 9]]\n",
            "[[9 7 6 5 5 5 4 3 2 2]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "pXY2A4B8U0P1",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "2c23281b-4ad3-4a90-f0de-cbc3b5154107"
      },
      "source": [
        "a=np.array([1,2,3,4,5,6,7,8,9])\n",
        "b=np.array([a[0:3],a[3:6],a[6:9]])\n",
        "print(b)"
      ],
      "execution_count": 3,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[1 2 3]\n",
            " [4 5 6]\n",
            " [7 8 9]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "D1nFVUaqU6jV",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "e2119ecc-5be5-4b41-9f0c-04674ebd18f6"
      },
      "source": [
        "a=np.array([111,234,55,66])\n",
        "b=np.array([1,2,4,5])\n",
        "c=np.array([a,b])\n",
        "print(c) \n",
        "print(np.concatenate([a,b]))"
      ],
      "execution_count": 4,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[111 234  55  66]\n",
            " [  1   2   4   5]]\n",
            "[111 234  55  66   1   2   4   5]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "avRwNfOSU8Lt",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "outputId": "5f5c3c12-8bd3-4f77-a57d-b44c1ec83c86"
      },
      "source": [
        "a=np.array([111,234,55,66])\n",
        "b=np.array([1,2,4,111])\n",
        "np.intersect1d(a,b)"
      ],
      "execution_count": 5,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "array([111])"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 5
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ItIa6RD-VDaj",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 68
        },
        "outputId": "255030bf-57b3-4f5e-f6cf-39918ae67e5a"
      },
      "source": [
        "from numpy.random import rand\n",
        "a = np.array([rand(100)])\n",
        "print(np.mean(a))\n",
        "print(np.median(a))\n",
        "print(np.std(a))"
      ],
      "execution_count": 7,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "0.49775176956847084\n",
            "0.4963718595725697\n",
            "0.29211821412148997\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ZVlDgAoqVYSG",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 102
        },
        "outputId": "a593a5dd-1731-4997-ae19-ff6b72d6a240"
      },
      "source": [
        "from sklearn.preprocessing import normalize\n",
        "a=np.array([[1,3,5,11,45],[4,8,3,1,3],[5,8,2,1,3],[2,45,6,8,5],[12,4,23,5,6]])\n",
        "print(normalize(a))"
      ],
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "[[0.02141274 0.06423821 0.10706368 0.2355401  0.96357313]\n",
            " [0.40201513 0.80403025 0.30151134 0.10050378 0.30151134]\n",
            " [0.49266464 0.78826342 0.19706586 0.09853293 0.29559878]\n",
            " [0.04309304 0.96959343 0.12927912 0.17237217 0.1077326 ]\n",
            " [0.43817805 0.14605935 0.83984125 0.18257419 0.21908902]]\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RyivWwtQVZIE",
        "colab_type": "code",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "outputId": "93aaabc8-3f09-496f-d7ad-c241698f377e"
      },
      "source": [
        "a=np.array([[[1,1,1],[2,2,2],[3,3,3],[4,4,4]],\n",
        "            [[1,1,1],[2,2,2],[2,6,6],[3,6,7]],\n",
        "            [[4,4,7],[1,1,1],[2,2,2,],[4,4,5]],\n",
        "            [[6,6,7],[2,2,2],[4,4,4],[1,1,1]]])\n",
        "print(a.shape)\n",
        "b=np.array([[1,3,5,11],[8,3,1,3],[8,2,1,3],[45,6,8,5],\n",
        "            [1,3,5,11],[8,3,1,3],[8,2,1,3],[45,6,8,5],\n",
        "            [1,3,5,11],[8,3,1,3],[8,2,1,3],[45,6,8,5],\n",
        "            [1,3,5,11],[8,3,1,3],[8,2,1,3],[45,6,8,5]])\n",
        "print(np.matmul(b,a))"
      ],
      "execution_count": 9,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "(4, 4, 3)\n",
            "[[[ 66  66  66]\n",
            "  [ 29  29  29]\n",
            "  [ 27  27  27]\n",
            "  [101 101 101]\n",
            "  [ 66  66  66]\n",
            "  [ 29  29  29]\n",
            "  [ 27  27  27]\n",
            "  [101 101 101]\n",
            "  [ 66  66  66]\n",
            "  [ 29  29  29]\n",
            "  [ 27  27  27]\n",
            "  [101 101 101]\n",
            "  [ 66  66  66]\n",
            "  [ 29  29  29]\n",
            "  [ 27  27  27]\n",
            "  [101 101 101]]\n",
            "\n",
            " [[ 50 103 114]\n",
            "  [ 25  38  41]\n",
            "  [ 23  36  39]\n",
            "  [ 88 135 140]\n",
            "  [ 50 103 114]\n",
            "  [ 25  38  41]\n",
            "  [ 23  36  39]\n",
            "  [ 88 135 140]\n",
            "  [ 50 103 114]\n",
            "  [ 25  38  41]\n",
            "  [ 23  36  39]\n",
            "  [ 88 135 140]\n",
            "  [ 50 103 114]\n",
            "  [ 25  38  41]\n",
            "  [ 23  36  39]\n",
            "  [ 88 135 140]]\n",
            "\n",
            " [[ 61  61  75]\n",
            "  [ 49  49  76]\n",
            "  [ 48  48  75]\n",
            "  [222 222 362]\n",
            "  [ 61  61  75]\n",
            "  [ 49  49  76]\n",
            "  [ 48  48  75]\n",
            "  [222 222 362]\n",
            "  [ 61  61  75]\n",
            "  [ 49  49  76]\n",
            "  [ 48  48  75]\n",
            "  [222 222 362]\n",
            "  [ 61  61  75]\n",
            "  [ 49  49  76]\n",
            "  [ 48  48  75]\n",
            "  [222 222 362]]\n",
            "\n",
            " [[ 43  43  44]\n",
            "  [ 61  61  69]\n",
            "  [ 59  59  67]\n",
            "  [319 319 364]\n",
            "  [ 43  43  44]\n",
            "  [ 61  61  69]\n",
            "  [ 59  59  67]\n",
            "  [319 319 364]\n",
            "  [ 43  43  44]\n",
            "  [ 61  61  69]\n",
            "  [ 59  59  67]\n",
            "  [319 319 364]\n",
            "  [ 43  43  44]\n",
            "  [ 61  61  69]\n",
            "  [ 59  59  67]\n",
            "  [319 319 364]]]\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}
